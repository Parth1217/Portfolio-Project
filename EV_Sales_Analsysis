SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;

---  List the top 3 and bottom 3 makers for the fiscal years 2023 and 2024 in terms of the number of 2-wheelers sold--



WITH Sales AS ( 
    SELECT 
        d.fiscal_year, 
        m.maker, 
        SUM(m.electric_vehicles_sold) AS total_sold 
    FROM 
        `my-practice-1712.Portfolio_project.dim_data` AS d 
    INNER JOIN 
        `my-practice-1712.Portfolio_project.makers` AS m 
    ON 
        d.date = m.date 
    WHERE 
        d.fiscal_year IN (2023, 2024) 
        AND m.vehicle_category = "2-Wheelers"
    GROUP BY 
        d.fiscal_year, m.maker
), 
RankedSales AS (
    SELECT 
        fiscal_year, 
        maker, 
        total_sold, 
        ROW_NUMBER() OVER (PARTITION BY fiscal_year ORDER BY total_sold DESC) AS rank_desc,
        ROW_NUMBER() OVER (PARTITION BY fiscal_year ORDER BY total_sold ASC) AS rank_asc 
    FROM 
        Sales
)  
SELECT 
    fiscal_year, 
    maker, 
    total_sold, 
    'Top 3' AS position
FROM 
    RankedSales 
WHERE 
    rank_desc <= 3 

UNION ALL 

SELECT 
    fiscal_year, 
    maker, 
    total_sold, 
    'Bottom 3' AS position
FROM 
    RankedSales 
WHERE 
    rank_asc <= 3  -- Use <= to capture the bottom 3
ORDER BY 
    fiscal_year, position desc,  total_sold desc;


    ------Identify the top 5 states with the highest penetration rate in 2-wheeler and 4-wheeler EV sales in FY 2024- -- 

--Penetration Rate: This metric represents the percentage of total vehicles that are electric within a specific region or category. It is calculated as:
		-----Penetration Rate =  (Electric Vehicles Sold / Total Vehicles Sold) * 100  
   ----This indicates the adoption level of electric vehicles ---- 

SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.state`;

WITH penetrations AS (
    SELECT 
        d.fiscal_year, 
        s.vehicle_category, 
        s.state, 
        (s.electric_vehicles_sold / NULLIF(s.total_vehicles_sold, 0)) * 100 AS penetration  -- Use NULLIF to avoid division by zero
    FROM 
        `my-practice-1712.Portfolio_project.dim_data` AS d 
    JOIN 
        `my-practice-1712.Portfolio_project.state` AS s 
    ON 
        d.date = s.date 
    WHERE 
        d.fiscal_year = 2024 
        AND s.vehicle_category IN ("2-Wheelers", "4-Wheelers")
), 
rankcatego AS (
    SELECT 
        fiscal_year, 
        vehicle_category, 
        state, 
        round( penetration ,2) as penetration, 
        ROW_NUMBER() OVER (PARTITION BY vehicle_category ORDER BY penetration DESC) AS rank_desc
    FROM 
        penetrations
)

SELECT 
    fiscal_year, 
    vehicle_category, 
    state, 
    penetration
FROM 
    rankcatego
WHERE 
    vehicle_category = "2-Wheelers" 
    AND rank_desc <= 5  -- Get top 5 for 2-Wheelers

UNION ALL

SELECT 
    fiscal_year, 
    vehicle_category, 
    state, 
    penetration
FROM 
    rankcatego
WHERE 
    vehicle_category = "4-Wheelers" 
    AND rank_desc <= 5  -- Get top 5 for 4-Wheelers
ORDER BY 
    vehicle_category, 
    penetration DESC;  -- Final ordering for the combined result


--- List of the states declining penetration rate of electric vehicle sales from 2020 to 2024----

WITH yearly_sales AS (
    SELECT 
        state,
        EXTRACT(YEAR FROM date) AS year,
        SUM(electric_vehicles_sold) AS total_ev_sold
    FROM 
        `my-practice-1712.Portfolio_project.state` 
    WHERE 
        EXTRACT(YEAR FROM date) BETWEEN 2022 AND 2024
    GROUP BY 
        state, year
),
sales_diff AS (
    SELECT 
        y2022.state,
        COALESCE(y2022.total_ev_sold, 0) AS ev_sales_2022,
        COALESCE(y2024.total_ev_sold, 0) AS ev_sales_2024,
        (COALESCE(y2024.total_ev_sold, 0) - COALESCE(y2022.total_ev_sold, 0)) AS sales_change
    FROM 
        (SELECT * FROM yearly_sales WHERE year = 2022) y2022
    LEFT JOIN 
        (SELECT * FROM yearly_sales WHERE year = 2024) y2024
    ON y2022.state = y2024.state
)
SELECT 
    state
FROM 
    sales_diff
WHERE 
    sales_change < 0;




-----What are the quarterly trends based on sales volume for the top 5 EV
makers (4-wheelers) from 2022 to 2024?   --- 
SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;




with highest_sales as ( SELECT  d.fiscal_year,m.maker, d.quarter, MAX(m.electric_vehicles_sold) AS highest_ev_sold
       
  FROM `my-practice-1712.Portfolio_project.makers` AS m
  INNER JOIN `my-practice-1712.Portfolio_project.dim_data` AS d 
    ON m.date = d.date
 WHERE m.vehicle_category = "4-Wheelers" 
   AND d.fiscal_year BETWEEN 2022 AND 2024
 GROUP BY m.maker, d.fiscal_year, d.quarter),
 RankedSales AS (
    SELECT 
        fiscal_year, 
        maker, quarter 
        highest_ev_sold, 
        ROW_NUMBER() OVER (PARTITION BY fiscal_year,  ORDER BY highest_ev_sold DESC) AS rank_desc
     
    FROM 
        Sales
)  
SELECT 
    fiscal_year, 
    maker, 
    highest_ev_sold, 
    'Top 5' AS position
FROM 
    RankedSales 
WHERE 
    rank_desc <= 5 

    ORDER BY  fiscal_year,  highest_ev_sold;


 WITH highest_sales AS (
  SELECT
    d.fiscal_year,
    m.maker,
    d.quarter,
    MAX(m.electric_vehicles_sold) AS highest_ev_sold
  FROM `my-practice-1712.Portfolio_project.makers` AS m
  INNER JOIN `my-practice-1712.Portfolio_project.dim_data` AS d
  ON m.date = d.date
  WHERE m.vehicle_category = "4-Wheelers"
  AND d.fiscal_year BETWEEN 2022 AND 2024
  GROUP BY m.maker, d.fiscal_year, d.quarter
),
RankedSales AS (
  SELECT
    fiscal_year,
    maker,
    quarter,
    highest_ev_sold,
    ROW_NUMBER() OVER (PARTITION BY  fiscal_year, quarter ORDER BY highest_ev_sold DESC) AS rank_desc
  FROM highest_sales
)
SELECT
  fiscal_year,
  maker,
  quarter,
  highest_ev_sold,
  'Top 5' AS position
FROM RankedSales
WHERE rank_desc <= 5
ORDER BY  fiscal_year, quarter ;

---How do the ev sales and penetration rates in delhi compare to karnataka for 2024---
SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;
Delhi compare to karnataka for 2024---
SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;
 


WITH sales AS (
    SELECT 
        state, 
        SUM(electric_vehicles_sold) AS total_ev_sales,
        SUM(total_vehicles_sold) AS total_vehicles_sold,  -- Include total vehicles sold for penetration calculation
        EXTRACT(YEAR FROM date) AS year
    FROM 
        `my-practice-1712.Portfolio_project.state` AS s 
    WHERE  
        state IN ("Delhi", "Karnataka")  -- Filter for specific states
        AND EXTRACT(YEAR FROM date) = 2024  -- Filter for the year 2024
    GROUP BY  
        year, state
), 
penetrations AS (
    SELECT 
        state, 
        total_ev_sales, 
        year,  
        (total_ev_sales / NULLIF(total_vehicles_sold, 0)) * 100 AS penetration  -- Calculate penetration as a percentage
    FROM 
        sales  
)
SELECT 
    state, 
    total_ev_sales, 
    round( penetration,2), 
    year 
FROM 
    penetrations;

    ---list down the top 10 states that had the highest compounded annual growth rate cagr from 2022 to 2024 in total vehicles sold---
---Compound Annual Growth Rate (CAGR): CAGR measures the mean annual growth rate over a specified period longer than one year. It is calculated as:
		--CAGR = [(Ending Value / Beginning Value) ** 1/n] -1-----
WITH yearly_sales AS (
    SELECT 
        state, 
        EXTRACT(YEAR FROM date) AS year, 
        SUM(total_vehicles_sold) AS total_vehicles_sold
    FROM 
        `my-practice-1712.Portfolio_project.state` 
    WHERE 
        EXTRACT(YEAR FROM date) IN (2022, 2024)
    GROUP BY 
        state, EXTRACT(YEAR FROM date)
), 
sales_2022 AS (
    SELECT 
        state, 
        total_vehicles_sold AS total_vehicles_2022
    FROM 
        yearly_sales
    WHERE 
        year = 2022
),
sales_2024 AS (
    SELECT 
        state, 
        total_vehicles_sold AS total_vehicles_2024
    FROM 
        yearly_sales
    WHERE 
        year = 2024
),
cagr_calculation AS (
    SELECT 
        s2022.state,
        s2022.total_vehicles_2022,
        s2024.total_vehicles_2024,
        -- Calculate CAGR using the formula: ((V_end / V_start) ^ (1/n)) - 1
        POWER(CAST(s2024.total_vehicles_2024 AS FLOAT64) / NULLIF(CAST(s2022.total_vehicles_2022 AS FLOAT64), 0), 1/2.0) - 1 AS cagr
    FROM 
        sales_2022 s2022
    JOIN 
        sales_2024 s2024 
    ON 
        s2022.state = s2024.state
)
SELECT 
    state, 
    total_vehicles_2022, 
    total_vehicles_2024, 
    cagr
FROM 
    cagr_calculation
ORDER BY 
    cagr DESC
LIMIT 10;
---List down the compounded annual growth rate (CAGR) in 4-wheeler units for the top 5 makef from 2022 to 2024----

SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;
 
WITH yearly_sales AS (
    SELECT 
        m.maker, 
        EXTRACT(YEAR FROM m.date) AS year, 
        SUM(m.electric_vehicles_sold) AS total_vehicles_sold
    FROM 
    
        `my-practice-1712.Portfolio_project.makers` AS m
 
    WHERE 
        EXTRACT(YEAR FROM m.date) IN (2022, 2024)
        AND m.vehicle_category = "4-Wheelers"
    GROUP BY 
        m.maker, EXTRACT(YEAR FROM m.date)
), 
sales_2022 AS (
    SELECT 
        maker, 
        total_vehicles_sold AS total_vehicles_2022
    FROM 
        yearly_sales
    WHERE 
        year = 2022
),
sales_2024 AS (
    SELECT 
        maker, 
        total_vehicles_sold AS total_vehicles_2024
    FROM 
        yearly_sales
    WHERE 
        year = 2024
),
cagr_calculation AS (
    SELECT 
        s2022.maker,
        s2022.total_vehicles_2022,
        s2024.total_vehicles_2024,
        -- Calculate CAGR using the formula: ((V_end / V_start) ^ (1/n)) - 1
        POWER(CAST(s2024.total_vehicles_2024 AS FLOAT64) / NULLIF(CAST(s2022.total_vehicles_2022 AS FLOAT64), 0), 1/2.0) - 1 AS cagr
    FROM 
        sales_2022 s2022
    JOIN 
        sales_2024 s2024 
    ON 
        s2022.maker = s2024.maker
)
SELECT 
    maker, 
    total_vehicles_2022, 
    total_vehicles_2024, 
    cagr
FROM 
    cagr_calculation
WHERE 
    total_vehicles_2022 IS NOT NULL
    AND total_vehicles_2024 IS NOT NULL
ORDER BY 
    cagr DESC
LIMIT 5;

----What are the peak and low season months for EV sales based on the
-- data from 2022 to 2024--- 

SELECT * FROM `my-practice-1712.Portfolio_project.dim_data` LIMIT 1000
select * from `my-practice-1712.Portfolio_project.makers`;
select * from `my-practice-1712.Portfolio_project.state`;

 
WITH monthly_sales AS (
    SELECT 
        EXTRACT(YEAR FROM m.date) AS year, 
        EXTRACT(MONTH FROM m.date) AS month,
        SUM(m.electric_vehicleS_sold) AS total_ev_sold
    FROM 
        `my-practice-1712.Portfolio_project.makers` AS m
    WHERE 
        EXTRACT(YEAR FROM m.date) BETWEEN 2022 AND 2024
    GROUP BY 
        year, month
)
SELECT 
    year, 
    month, 
    total_ev_sold,
    CASE 
        WHEN total_ev_sold = (SELECT MAX(total_ev_sold) FROM monthly_sales) THEN 'Peak'
        WHEN total_ev_sold = (SELECT MIN(total_ev_sold) FROM monthly_sales) THEN 'Low'
        ELSE 'Normal' 
    END AS season
FROM 
    monthly_sales
ORDER BY 
    total_ev_sold DESC;

----What is the projected number of EV sales (including 2-wheelers and 4-wheelers) for the top 10 states by penetration rate in 2030, ---
----based on the compounded annual growth rate (CAGR) from previous years?----- 

    WITH yearly_sales AS (
    SELECT
        state,
        EXTRACT(YEAR FROM date) AS year,
        SUM(electric_vehicles_sold) AS total_ev_sales,
        SUM(total_vehicles_sold) AS total_vehicles_sold
    FROM
        `my-practice-1712.Portfolio_project.state`
    WHERE
        EXTRACT(YEAR FROM date) BETWEEN 2022 AND 2024
    GROUP BY
        state, year
),
penetration_rate AS (
    SELECT
        state,
        year,
        total_ev_sales,
        (total_ev_sales / NULLIF(total_vehicles_sold, 0)) * 100 AS penetration_rate
    FROM
        yearly_sales
    WHERE 
        year = 2024
),
cagr_calculation AS (
    SELECT
        s2022.state,
        s2022.total_ev_sales AS total_ev_sales_2022,
        s2024.total_ev_sales AS total_ev_sales_2024,
        -- Calculate CAGR using the formula: ((V_end / V_start) ^ (1/n)) - 1
        POWER(CAST(s2024.total_ev_sales AS FLOAT64) / NULLIF(CAST(s2022.total_ev_sales AS FLOAT64), 0), 1/2.0) - 1 AS cagr
    FROM
        (SELECT * FROM yearly_sales WHERE year = 2022) s2022
    JOIN
        (SELECT * FROM yearly_sales WHERE year = 2024) s2024
    ON
        s2022.state = s2024.state
),
top_10_states AS (
    SELECT
        cagr_calc.state,
        cagr_calc.total_ev_sales_2024,
        cagr_calc.cagr,
        pr.penetration_rate
    FROM
        cagr_calculation cagr_calc
    JOIN
        penetration_rate pr
    ON
        cagr_calc.state = pr.state
    ORDER BY
        pr.penetration_rate DESC
    LIMIT 10
)
SELECT
    state,
    total_ev_sales_2024,
    cagr,
    -- Project EV sales for 2030
    total_ev_sales_2024 * POWER(1 + cagr, 2030 - 2024) AS projected_ev_sales_2030
FROM
    top_10_states;

    WITH yearly_sales AS (
    SELECT
        EXTRACT(YEAR FROM m.date) AS year,
        m.vehicle_category,
        SUM(m.electric_vehicles_sold) AS total_ev_sales
    FROM
        `my-practice-1712.Portfolio_project.makers` AS m
    WHERE
        m.vehicle_category IN ('4-Wheelers', '2-Wheelers')
        AND EXTRACT(YEAR FROM m.date) BETWEEN 2022 AND 2024
    GROUP BY
        year, m.vehicle_category
),
avg_prices AS (
    SELECT
        '4-Wheelers' AS vehicle_category, 1000000 AS avg_price -- Assume Rs. 10 Lakhs per 4-wheeler
    UNION ALL
    SELECT
        '2-Wheelers', 100000 -- Assume Rs. 1 Lakh per 2-wheeler
),
revenue_calculation AS (
    SELECT
        ys.year,
        ys.vehicle_category,
        ys.total_ev_sales,
        ys.total_ev_sales * ap.avg_price AS revenue
    FROM
        yearly_sales ys
    JOIN
        avg_prices ap
    ON
        ys.vehicle_category = ap.vehicle_category
),
revenue_growth AS (
    SELECT
        r2022.vehicle_category,
        r2022.revenue AS revenue_2022,
        r2023.revenue AS revenue_2023,
        r2024.revenue AS revenue_2024,
        -- Revenue growth between 2022 and 2024
        ((r2024.revenue - r2022.revenue) / NULLIF(r2022.revenue, 0)) * 100 AS growth_2022_vs_2024,
        -- Revenue growth between 2023 and 2024
        ((r2024.revenue - r2023.revenue) / NULLIF(r2023.revenue, 0)) * 100 AS growth_2023_vs_2024
    FROM
        (SELECT * FROM revenue_calculation WHERE year = 2022) r2022
    JOIN
        (SELECT * FROM revenue_calculation WHERE year = 2023) r2023
    ON
        r2022.vehicle_category = r2023.vehicle_category
    JOIN
        (SELECT * FROM revenue_calculation WHERE year = 2024) r2024
    ON
        r2022.vehicle_category = r2024.vehicle_category
)
SELECT
    vehicle_category,
    revenue_2022,
    revenue_2023,
    revenue_2024,
    growth_2022_vs_2024,
    growth_2023_vs_2024
FROM
    revenue_growth;


